<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
    <meta>
        <author>Vikram Bodicherla</author>
        <sampleQuery>select * from {table} where data in ('nowcast','twelve-hour-forecast', 'three-day-forecast', 'psi-update', 'heavy-rain-warning')</sampleQuery>
    </meta>
    <bindings>
        <select>
            <inputs>
                <key id='data' batchable='true' type='xs:string' paramType='query' required='true'/>
            </inputs>
            <execute>
                <![CDATA[
                    var urls = {
                        'nowcast': 'http://www.weather.gov.sg/wip/pp/rndops/web/rss/rssNcast_NEW.xml',
                        'twelve-hour-forecast': 'http://www.weather.gov.sg/wip/pp/rndops/web/rss/rssForecast_new.xml',
                        'three-day-forecast': 'http://www.weather.gov.sg/wip/pp/rndops/web/rss/3Day_RSS.xml',
                        'psi-update': 'http://app2.nea.gov.sg/data/rss/nea_psi.xml',
                        'heavy-rain-warnings': 'http://www.weather.gov.sg/wip/pp/rndops/web/rss/rssHeavyRain_new.xml'
                    };
                                  
                    var getter = function(url, options){
                        var tries = 0;
                        options = options || {retries: 1};
                    
                        var response = null;
                        while(tries < options.retries){
                            var result = y.rest(url).get();
                            if(!result.timeout && result.status == 200){
                                response = result.response;
                                break;
                            }
                            y.log('Retrying ' + (tries + 1) + ' time...');
                            tries++;
                        }
              
                        return response;
                    };

                    y.log(data);
              
                    var respData = {};

                    if(data.indexOf('psi-update') > -1){
                        fetchPsiData();
                    }
                
                    for(var i = 0, length = data.length; i < length; i++){
                        y.log(data[i] + ' ' + urls[data[i]]);
                        if(data[i] !== 'psi-update'){
                            fetchSummary(data[i], urls[data[i]]);
                        }
                    }
              
                    function fetchPsiData(){
                        //Add psi data
                        var url = urls['psi-update'];
                        y.log('Fetching psi-update from ' + url);
                    
                        var rss = getter(url, {retries: 3});
                        var rssItems = y.xmlToJson(rss).rss.channel.item;
                    
                        var psiElements = [];
                        if(rssItems){
                            for(var i = 0, length = rssItems.length; i < length; i++){
                                var rssItem = rssItems[i];
                                psiElements.push({psi: rssItem.psi, pubDate: rssItem.pubDate});
                            }                       
                        }   
                        respData['psi-update'] = psiElements;
                    }

                    function fetchSummary(element, url){
                        y.log('Fetching ' + element + ' from ' + url);
                        var rss = getter(url, {retries: 3});
                        respData[element] = y.xmlToJson(rss).feed.entry.summary;
                    }

                    response.object = {data: respData};
                ]]>
            </execute>
        </select>
    </bindings>
</table>